/*
 * Copyright (c) 2017. Eric Niu
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package com.eric.org.util;


public class LogLine {
    public String line;
    public String msg;

    private boolean mHidden;
    protected String css;

    public LogLine(String line) {
        this.line = line;
        msg = line;
        mHidden = false;
    }
    protected LogLine(LogLine orig) {
        line = orig.line;
        msg = orig.msg;
        mHidden = orig.mHidden;
    }

    public void setHidden(boolean b) {
        mHidden = b;
    }

    public boolean isHidden() {
        return mHidden;
    }

    public LogLine copy() {
        return new LogLine(this);
    }


    public boolean laterThan(LogLine o){
        return this.getTS() < o.getTS();
    }
    /**
     * Parse a log line from logs generated by brat scripts (adb logcat -v threadtime)
     */
    private long getTS() {
        long ts = 0;

        if (line.length() <= 33) return ts;

        // Read time stamp
        try {
            int month = Integer.parseInt(line.substring(0, 2));
            int day = Integer.parseInt(line.substring(3, 5));
            int hour = Integer.parseInt(line.substring(6, 8));
            int min = Integer.parseInt(line.substring(9, 11));
            int sec  = Integer.parseInt(line.substring(12, 14));
            int ms = Integer.parseInt(line.substring(15, 18));
            ts = month;
            ts = ts * 31 + day;
            ts = ts * 24 + hour;
            ts = ts * 60 + min;
            ts = ts * 60 + sec;
            ts = ts * 1000 + ms;
        } catch (NumberFormatException nfe) {

        }
        return ts;
    }


}


