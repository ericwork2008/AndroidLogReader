apply plugin: 'application'
apply plugin: 'java'

mainClassName = 'com.eric.org.LogViewerApp'

jar {
    manifest {
        attributes 'Main-Class': 'com.eric.org.LogViewerApp'
    }
    from configurations.runtime
    baseName = rootProject.name
}
task generateSources {
    outputs.dir file("${buildDir}/generated/")
    doFirst {
        def srcFile = new File("${buildDir}/generated/com/eric/org/BuildVersion.java")
        srcFile.delete();
        srcFile.parentFile.mkdirs()
        srcFile.write("""
            package com.eric.org;
                 public class BuildVersion {
                     public static String getVersion() { return "$project.version"; }
                 }
           """)
    }
}
compileJava.dependsOn generateSources
compileJava.source generateSources.outputs.files, sourceSets.main.java

//fatJar.dependsOn generateSources

//create a single Jar with all dependencies
task fatJar(type: Jar) {
    manifest {
        attributes 'Main-Class': 'com.eric.org.LogViewerApp'
    }
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar

    baseName = rootProject.name
}
repositories {
    mavenCentral()
}
configurations {
    // configuration that holds jars to include in the jar
    extraLibs
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.12'
    compile group: 'com.apple', name: 'AppleJavaExtensions', version: '1.4'
    compile group: 'com.android.ddmlib', name:'ddmlib',version:'r16'
    compile project(':common')
    extraLibs group: 'com.apple', name: 'AppleJavaExtensions', version: '1.4'
    extraLibs group: 'com.android.ddmlib', name:'ddmlib',version:'r16'
    configurations.compile.extendsFrom(configurations.extraLibs)

}
sourceSets {
    main {
        java {
            srcDirs = ['src',"${buildDir}/generated/"]
        }
        resources {
            srcDirs = ['resource']
        }
    }

}